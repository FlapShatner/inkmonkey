::backdrop {
  background-color: rgba(0, 0, 0, 0.5);
  height: 100vh;
  max-height: 100vh;
  width: 100vw;
}

dialog {
  @apply bg-bg-secondary;
  position: fixed;
  top: 0;
  left: calc(100% - var(--drawer-width));
  transform: translateX(100%);
  width: 100%;
  max-width: var(--drawer-width);
  height: auto;
  max-height: 100vh;
  /* background-color: white; */
  border-top-left-radius: 10px;
  border-bottom-left-radius: 10px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  transition: all 0.5s cubic-bezier(0.33, 1, 0.68, 1);
}

dialog[open] {
  transform: translateX(0);
}

dialog.close {
  transform: translateX(100%);
}

@starting-style {
  dialog[open] {
    transform: translateX(100%);
  }
}

dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  backdrop-filter: blur(10px);
  transition:
    display 0.7s allow-discrete,
    overlay 0.7s allow-discrete,
    background-color 0.7s;
  backdrop-filter: 0.7s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 50%);
  backdrop-filter: blur(10px);
}

dialog.close::backdrop {
  background-color: rgb(0 0 0 / 0%);
  backdrop-filter: blur(0px);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}